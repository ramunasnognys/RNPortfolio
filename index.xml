<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ramunas Nognys</title>
    <link>https://blog.ramunasnognys.tech/</link>
    <description>Recent content on Ramunas Nognys</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.ramunasnognys.tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TypeScript Rules in Cursor IDE</title>
      <link>https://blog.ramunasnognys.tech/posts/typescript-rules-cursor/</link>
      <pubDate>Fri, 24 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.ramunasnognys.tech/posts/typescript-rules-cursor/</guid>
      <description>&lt;p&gt;To set up TypeScript rules in Cursor IDE, you can follow these organized steps based on the&#xA;provided rules:&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-formatting-with-prettier&#34;&gt;1. &lt;strong&gt;Formatting with Prettier&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Install and enable the Prettier extension in Cursor.&lt;/li&gt;&#xA;&lt;li&gt;Configure Prettier settings (e.g., &lt;code&gt;singleQuote: true&lt;/code&gt;, &lt;code&gt;semicolon: &#39;always&#39;&lt;/code&gt;) in your&#xA;project&amp;rsquo;s &lt;code&gt;.prettierrc&lt;/code&gt; or &lt;code&gt;prettier.config.js&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-line-width&#34;&gt;2. &lt;strong&gt;Line Width&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In &lt;code&gt;tsconfig.json&lt;/code&gt;, set:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;maxLineLength&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;warnOnTruncatedLines&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-quotes-style&#34;&gt;3. &lt;strong&gt;Quotes Style&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Configure Prettier to use single quotes in &lt;code&gt;.prettierrc&lt;/code&gt; or &lt;code&gt;prettier.config.js&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-semicolons&#34;&gt;4. &lt;strong&gt;Semicolons&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Set &lt;code&gt;semicolon&lt;/code&gt; to &lt;code&gt;&amp;quot;always&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;never&amp;quot;&lt;/code&gt; in Prettier&amp;rsquo;s configuration.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;5-no-dangling-promises&#34;&gt;5. &lt;strong&gt;No Dangling Promises&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use ESLint with the rule &lt;code&gt;@typescript-eslint/no-floating-promises&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;6-require-explicit-return&#34;&gt;6. &lt;strong&gt;Require Explicit Return&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Configure ESLint with &lt;code&gt;@typescript-eslint/explicit-function-return-type&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;7-type-checks-enabled&#34;&gt;7. &lt;strong&gt;Type Checks Enabled&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ensure TypeScript is configured with strict mode in &lt;code&gt;tsconfig.json&lt;/code&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;strict&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;noEmit&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;8-no-eval&#34;&gt;8. &lt;strong&gt;No Eval&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Set &lt;code&gt;&amp;quot;disallowEval&amp;quot;: true&lt;/code&gt; in &lt;code&gt;tsconfig.json&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;9-disallow-consolelog-in-production&#34;&gt;9. &lt;strong&gt;Disallow console.log in Production&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use a custom linter or project-specific configurations to flag &lt;code&gt;console.log&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;10-import-order&#34;&gt;10. &lt;strong&gt;Import Order&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Install and configure the Prettier plugin &lt;code&gt;import-organize&lt;/code&gt; for import sorting.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;11-no-duplicate-imports&#34;&gt;11. &lt;strong&gt;No Duplicate Imports&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Enable TypeScript&amp;rsquo;s &lt;code&gt;--allow-duplicate-imports&lt;/code&gt; with &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;tsconfig.json&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-function-parameter-validation&#34;&gt;12. &lt;strong&gt;Function Parameter Validation&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Keep strict mode enabled (&lt;code&gt;&amp;quot;strict&amp;quot;: true&lt;/code&gt;) in &lt;code&gt;tsconfig.json&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;13-require-async-return&#34;&gt;13. &lt;strong&gt;Require Async Return&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use ESLint rule &lt;code&gt;@typescript-eslint/require-await&lt;/code&gt; for async functions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;14-export-style-default-vs-named&#34;&gt;14. &lt;strong&gt;Export Style (Default vs Named)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Configure Prettier or a linter to enforce consistent export styles.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;15-file-extensions&#34;&gt;15. &lt;strong&gt;File Extensions&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ensure all TypeScript files end with &lt;code&gt;.ts&lt;/code&gt; or &lt;code&gt;.tsx&lt;/code&gt; by setting &lt;code&gt;&amp;quot;fileExtensions&amp;quot;: {&#xD; &amp;quot;typescript&amp;quot;: [&amp;quot;ts&amp;quot;, &amp;quot;tsx&amp;quot;] }&lt;/code&gt; in &lt;code&gt;cursor.json&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;16-require-strict-mode&#34;&gt;16. &lt;strong&gt;Require Strict Mode&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Set &lt;code&gt;&amp;quot;useStrict&amp;quot;: true&lt;/code&gt; in &lt;code&gt;tsconfig.json&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;17-no-dead-code&#34;&gt;17. &lt;strong&gt;No Dead Code&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use TSLint or ESLint to detect and remove unused code.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;18-class-names-camelcase&#34;&gt;18. &lt;strong&gt;Class Names CamelCase&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Enforce naming conventions through a linter or extension.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;19-interface-vs-type-alias&#34;&gt;19. &lt;strong&gt;Interface vs Type Alias&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use custom linting rules in &lt;code&gt;linter.ts&lt;/code&gt; to enforce style preferences.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;20-file-structure&#34;&gt;20. &lt;strong&gt;File Structure&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Organize your project structure into appropriate directories (e.g., &lt;code&gt;src/@types&lt;/code&gt;,&#xA;&lt;code&gt;src/components&lt;/code&gt;) and use Cursor&amp;rsquo;s file tree settings to maintain this structure.&#xA;By following these steps, you can effectively configure TypeScript rules in Cursor IDE,&#xA;enhancing code quality and consistency.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>My Insane Blog Pipeline</title>
      <link>https://blog.ramunasnognys.tech/posts/my-insane-blog-pipeline/</link>
      <pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.ramunasnognys.tech/posts/my-insane-blog-pipeline/</guid>
      <description>&lt;h1 id=&#34;obsidian---why-i-love-it&#34;&gt;Obsidian - Why I love it&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.networkchuck.com/posts/my-insane-blog-pipeline/#obsidian---why-i-love-it&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Obsidian is the BEST notes application in the world. Go download it: &lt;a href=&#34;https://obsidian.md/&#34;&gt;https://obsidian.md/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;the-setup&#34;&gt;The Setup&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.networkchuck.com/posts/my-insane-blog-pipeline/#the-setup&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create a new folder labeled &lt;em&gt;posts&lt;/em&gt;. This is where you will add your blog posts&lt;/li&gt;&#xA;&lt;li&gt;….that’s all you have to do&lt;/li&gt;&#xA;&lt;li&gt;Actually…wait….find out where your Obsidian directories are. Right click your &lt;em&gt;posts&lt;/em&gt; folder and choose &lt;em&gt;show in system explorer&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;You’ll need this directory in upcoming steps.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;!&lt;img src=&#34;https://blog.networkchuck.com/images/Pasted%20image%2020241115145036.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contact</title>
      <link>https://blog.ramunasnognys.tech/contact/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.ramunasnognys.tech/contact/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m always interested in hearing about new opportunities, collaborations, or just having a chat about technology.&lt;/p&gt;&#xA;&lt;h3 id=&#34;contact-information&#34;&gt;Contact Information&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt;: &lt;a href=&#34;mailto:your.email@example.com&#34;&gt;your.email@example.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;LinkedIn&lt;/strong&gt;: &lt;a href=&#34;https://linkedin.com/in/yourprofile&#34;&gt;Your LinkedIn Profile&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a href=&#34;https://github.com/yourusername&#34;&gt;Your GitHub Profile&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;or-send-me-a-message&#34;&gt;Or send me a message&lt;/h3&gt;&#xA;&lt;p&gt;[Note: Form functionality will be added in Phase 3]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sample Project</title>
      <link>https://blog.ramunasnognys.tech/projects/sample-project/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.ramunasnognys.tech/projects/sample-project/</guid>
      <description>&lt;h2 id=&#34;project-overview&#34;&gt;Project Overview&lt;/h2&gt;&#xA;&lt;p&gt;This is a sample project that demonstrates my abilities in web development.&lt;/p&gt;&#xA;&lt;h3 id=&#34;technologies-used&#34;&gt;Technologies Used&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;React.js&lt;/li&gt;&#xA;&lt;li&gt;Node.js&lt;/li&gt;&#xA;&lt;li&gt;MongoDB&lt;/li&gt;&#xA;&lt;li&gt;Docker&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;User authentication&lt;/li&gt;&#xA;&lt;li&gt;Real-time updates&lt;/li&gt;&#xA;&lt;li&gt;Responsive design&lt;/li&gt;&#xA;&lt;li&gt;API integration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;links&#34;&gt;Links&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://example.com&#34;&gt;Live Demo&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yourusername/project&#34;&gt;GitHub Repository&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;&#xA;&lt;p&gt;[Screenshots will be added]&lt;/p&gt;</description>
    </item>
    <item>
      <title>my-insane-blog-post</title>
      <link>https://blog.ramunasnognys.tech/posts/my-insane-blog-post/</link>
      <pubDate>Tue, 07 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.ramunasnognys.tech/posts/my-insane-blog-post/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://blog.ramunasnognys.tech/images/Pasted%20image%2020250108062918.png&#34; alt=&#34;Pasted image 20250108062918.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.ramunasnognys.tech/images/Pasted%20image%2020250108063711.png&#34; alt=&#34;Pasted image 20250108063711.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.ramunasnognys.tech/images/Pasted%20image%2020250108064310.png&#34; alt=&#34;Pasted image 20250108064310.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;After watching an inspiring video about starting a blog in 2024, I realized something profound: &amp;ldquo;my mind is for having ideas, not holding them.&amp;rdquo; This quote from Tiago Forte&amp;rsquo;s &amp;ldquo;Building a Second Brain&amp;rdquo; hit me hard. We&amp;rsquo;re drowning in information but starving for wisdom. That&amp;rsquo;s why I decided to start this blog—not just as another voice on the internet, but as a way to process, organize, and share my journey of learning and growth.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
